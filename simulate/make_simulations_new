#!/bin/bash
amp=1e-14
nthread=8
nreal=100

. ./settings


function dopsr {
    psr=$1
    if grep -q $psr psr.noise ; then

        pw=`grep $psr psr.noise | awk '{print $2}'`
        pyr3=`grep $psr psr.noise | awk '{print $3}'`
        a=`grep $psr psr.noise | awk '{print $4}'`
        fc=`grep $psr psr.noise | awk '{print $5}'`
    else
        pw=`get_wrms.py $psr.simulate -psd`
        a=0
        pyr3=0
        fc=0.1
    fi

    nobs=`wc -l ${psr}.simulate | awk '{k=$1; if (k<5000)k=5000; print k+10}'`
    noflag="-nobs $nobs -npsr 1"

    if [[ -e ${psr}.ideal ]] ; then
        rm ${psr}.ideal
    fi

    echo "tempo2 -gr formIdeal -f $psr.par $psr.simulate $noflag"
    tempo2 -gr formIdeal -f $psr.par $psr.simulate $noflag

    mv $psr.simulate.sim $psr.ideal

    seed=`toasim_seed.py $psr white-$pyr3-$fc-$a`

    echo "$psr W=$pw R=$pyr3 a=$a fc=$fc G=$amp EFAC=$ef"
    echo "tempo2 -gr addGaussian -f $psr.par $psr.ideal -nreal $nreal -seed $seed"
    tempo2 -gr addGaussian -f $psr.par $psr.ideal -nreal $nreal -seed $seed

    seed=`toasim_seed.py $psr red-$pyr3-$fc-$a`

    if grep -q $psr psr.noise ; then

        echo "tempo2 -gr addRedNoise -f $psr.par $psr.ideal -nofit -npsr 1 -seed $seed -Pyr3 $pyr3 -fc $fc -a -$a -nreal $nreal $noflag "
        tempo2 -gr addRedNoise -f $psr.par $psr.ideal -nofit -npsr 1 -seed $seed -Pyr3 $pyr3 -fc $fc -a -$a -nreal $nreal $noflag 
    fi

}


gwseed=1234
#rm $amp.gwb
for i in *.par ; do

    while [[ `jobs -r | wc -l` -ge $nthread ]] ; do
        n=`jobs -r | wc -l`
        echo "Wait ($n/$nthread) running"
        sleep 1
    done

    psr=`basename $i .par`
    echo "Process $psr"
    dopsr $psr 2>&1 > ${psr}.simulate.log &
done

echo "wait for threads to end"
wait

cat psr.noise | awk '{print $1,$4,$3,$5}' > psr.red

make_GWB.py -A $amp -a angles -N $nreal -p psr.list --tim .ideal -n 8192

echo "waiting for processes to finish"

wait
